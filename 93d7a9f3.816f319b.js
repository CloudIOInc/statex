(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{155:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return u})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return s})),n.d(t,"default",(function(){return l}));var r=n(2),a=n(9),o=(n(0),n(170)),u={title:"useStateXValueSetter()",sidebar_label:"useStateXValueSetter()"},c={id:"api-reference/core/useStateXValueSetter",title:"useStateXValueSetter()",description:"Returns a setter function for updating the value of writeable StateX state.",source:"@site/docs/api-reference/core/useStateXValueSetter.md",permalink:"/statex/docs/api-reference/core/useStateXValueSetter",editUrl:"https://github.com/CloudIOInc/statex/edit/master/website/docs/api-reference/core/useStateXValueSetter.md",sidebar_label:"useStateXValueSetter()",sidebar:"someSidebar",previous:{title:"useStateXValue()",permalink:"/statex/docs/api-reference/core/useStateXValue"},next:{title:"useStateXGetter()",permalink:"/statex/docs/api-reference/core/useStateXGetter"}},s=[{value:"useStateXSetter()",id:"usestatexsetter",children:[]},{value:"Example",id:"example",children:[]}],i={rightToc:s};function l(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},i,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"Returns a setter function for updating the value of writeable StateX state."),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-jsx"}),"function useStateXValueSetter<T>(\n  pathOrAtom: PathOrStateXOrSelector<T>,\n  options?: Options,\n): Dispatch<T>\n")),Object(o.b)("p",null,"This is the recommended hook to use when a component intends to write to state without reading it. If a component used the ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"useStateX"}),"useStateX()")," hook to get the setter, it would also subscribe to updates and re-render when the atom or selector updated. Using ",Object(o.b)("inlineCode",{parentName:"p"},"useStateXValueSetter()")," allows a component to set the value without re-rendering when the value changes."),Object(o.b)("h3",{id:"usestatexsetter"},"useStateXSetter()"),Object(o.b)("p",null,"You can also use useStateXSetter() hook, which returns a setter function. Using the returned setter function, you can access one or more state values dynamically."),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-jsx",metastring:'title="useStateXSetter()"',title:'"useStateXSetter()"'}),"function useStateXSetter():\n    <V>(pathOrAtom: PathOrStateX<V>,\n      value: SetStateAction<V>,\n      options?: Options | undefined\n    ) => Readonly<V>\n")),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-javascript"}),"  const set = useStateXSetter();\n  ...\n  set(['mypath'], 'Some value');\n  ...\n  set(atom, 'value');\n")),Object(o.b)("h3",{id:"example"},"Example"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-jsx",metastring:"live",live:!0}),"useWithStateX({ name: 'Hi there!' });\n\nconst setName = useStateXValueSetter(['name']);\nconst renderCounter = useRef(0);\nrenderCounter.current++;\nconst onChange = (e) => {\n  setName(e.target.value);\n};\n\nreturn (\n  <>\n    Type something... <input onChange={onChange} />\n    <br />\n    Render Count: {renderCounter.current}\n  </>\n);\n")))}l.isMDXComponent=!0},170:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return m}));var r=n(0),a=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function u(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?u(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):u(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=a.a.createContext({}),l=function(e){var t=a.a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},p=function(e){var t=l(e.components);return a.a.createElement(i.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},d=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,u=e.parentName,i=s(e,["components","mdxType","originalType","parentName"]),p=l(n),d=r,m=p["".concat(u,".").concat(d)]||p[d]||b[d]||o;return n?a.a.createElement(m,c(c({ref:t},i),{},{components:n})):a.a.createElement(m,c({ref:t},i))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,u=new Array(o);u[0]=d;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:r,u[1]=c;for(var i=2;i<o;i++)u[i]=n[i];return a.a.createElement.apply(null,u)}return a.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);